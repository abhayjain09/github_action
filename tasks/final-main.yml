---
- name: Check github_account variable (RUN ONCE)
  ansible.builtin.assert:
    that:
      - github_account is defined
    fail_msg: "github_account is not defined"
  run_once: true
  when: github_enterprise is not defined

- name: Check access_token variable (RUN ONCE)
  ansible.builtin.assert:
    that:
      - access_token is defined
      - access_token | length > 0
    fail_msg: "access_token was not found or is using an invalid format."
  run_once: true

- name: Check runner_org variable (RUN ONCE)
  ansible.builtin.assert:
    that:
      - runner_org | bool == True or runner_org == False
    fail_msg: "runner_org should be a boolean value"
  run_once: true
  when: github_enterprise is not defined

- name: Check github_repo variable (RUN ONCE)
  ansible.builtin.assert:
    that:
      - github_repo is defined
      - github_repo | length > 0
    fail_msg: "github_repo was not found or is using an invalid format."
  run_once: true
  when: not runner_org and github_enterprise is not defined


- name: Info collections
  check_mode: false
  block:
    - name: Set complete API url for repo runner
      ansible.builtin.set_fact:
        github_full_api_url: "{{ github_api_url }}/repos/{{ github_owner | default(github_account) }}/{{ github_repo }}/actions/runners"
      when: not runner_org and github_enterprise is not defined

    - name: Set complete API url for org runner
      ansible.builtin.set_fact:
        github_full_api_url: "{{ github_api_url }}/orgs/{{ github_owner | default(github_account) }}/actions/runners"
      when: runner_org | bool and github_enterprise is not defined

    - name: Set complete API url for enterprise runner
      ansible.builtin.set_fact:
        github_full_api_url: "{{ github_api_url }}/enterprises/{{ github_enterprise }}/actions/runners"
      when: github_enterprise is defined

    - name: Get registration token (RUN ONCE)
      ansible.builtin.uri:
        url: "{{ github_full_api_url }}/registration-token"
        headers:
          Authorization: "token {{ access_token }}"
          Accept: "application/vnd.github.v3+json"
        method: POST
        status_code: 201
        force_basic_auth: true
      register: registration
      run_once: true

    - name: "Check currently registered runners for repo {{ '(RUN ONCE)' if all_runners_in_same_repo else '' }}"
      ansible.builtin.uri:
        url: "{{ github_full_api_url }}"
        headers:
          Authorization: "token {{ access_token }}"
          Accept: "application/vnd.github.v3+json"
        method: GET
        body_format: form-urlencoded
        body:
          per_page: "{{ github_api_runners_per_page }}"
        status_code: 200
        force_basic_auth: true
      register: registered_runners
      run_once: "{{ all_runners_in_same_repo }}"

    - name: Get Runner User IDs
      ansible.builtin.command: id -u "{{ runner_user }}"
      changed_when: false
      register: runner_user_id

    - name: Get Runner Group IDs
      ansible.builtin.command: id -g "{{ runner_user }}"
      changed_when: false
      register: runner_user_group_id

    - name: Set runner_system variable
      ansible.builtin.set_fact:
        runner_system: "{{ 'osx' if ansible_facts.system == 'Darwin' else 'linux' }}"

    - name: Find the latest runner version (RUN ONCE)
      ansible.builtin.uri:
        url: "https://api.github.com/repos/{{ runner_download_repository }}/releases/latest"
        headers:
          Content-Type: "application/json"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
      check_mode: false
      register: api_response
      run_once: true
      become: false
      delegate_to: localhost
      when: runner_version == "latest"

    - name: Get systemd service facts
      ansible.builtin.service_facts:
      register: service_facts
      when: ansible_facts.system  == "Linux"

- name: Install dependencies on Debian Stretch
  ansible.builtin.package:
    pkg:
      - acl
      - liblttng-ust0
      - libkrb5-3
      - zlib1g
      - libssl1.1
      - libicu57
    state: present
    update_cache: true
  become: true
  when: (ansible_facts.distribution == "Debian" and ansible_facts.distribution_major_version == "9")

- name: Install dependencies on Debian Buster
  ansible.builtin.package:
    pkg:
      - acl
      - liblttng-ust0
      - libkrb5-3
      - zlib1g
      - libssl1.1
      - libicu63
    state: present
    update_cache: true
  become: true
  when: (ansible_facts.distribution == "Debian" and ansible_facts.distribution_major_version == "10")

- name: Install dependencies on Debian Bullseye
  ansible.builtin.package:
    pkg:
      - acl
      - liblttng-ust0
      - libkrb5-3
      - zlib1g
      - libssl1.1
      - libicu67
    state: present
    update_cache: true
  become: true
  when: (ansible_facts.distribution == "Debian" and ansible_facts.distribution_major_version == "11")

- name: Install dependencies on Debian Bookworm
  ansible.builtin.package:
    pkg:
      - acl
      - liblttng-ust1
      - libkrb5-3
      - zlib1g
      - libssl3
      - libicu72
    state: present
    update_cache: true
  become: true
  when: (ansible_facts.distribution == "Debian" and ansible_facts.distribution_major_version == "12")

- name: Install dependencies on Ubuntu Xenial systems
  ansible.builtin.package:
    pkg:
      - acl
      - liblttng-ust0
      - libkrb5-3
      - zlib1g
      - libssl1.0.0
      - libicu55
    state: present
    update_cache: true
  become: true
  when: (ansible_facts.distribution == "Ubuntu" and ansible_facts.distribution_major_version == "16")

- name: Install dependencies on Ubuntu Bionic systems
  ansible.builtin.package:
    pkg:
      - acl
      - liblttng-ust0
      - libkrb5-3
      - zlib1g
      - libssl1.1
      - libicu60
    state: present
    update_cache: true
  become: true
  when: (ansible_facts.distribution == "Ubuntu" and ansible_facts.distribution_major_version == "18")

- name: Install dependencies on Ubuntu Focal systems
  ansible.builtin.package:
    pkg:
      - acl
      - liblttng-ust0
      - libkrb5-3
      - zlib1g
      - libssl1.1
      - libicu66
    state: present
    update_cache: true
  become: true
  when: (ansible_facts.distribution == "Ubuntu" and ansible_facts.distribution_major_version == "20")

- name: Install dependencies on Ubuntu Jammy systems
  ansible.builtin.package:
    pkg:
      - acl
      - liblttng-ust1
      - libkrb5-3
      - zlib1g
      - libicu70
    state: present
    update_cache: true
  become: true
  when: (ansible_facts.distribution == "Ubuntu" and ansible_facts.distribution_major_version == "22")

- name: Install dependencies on RHEL/CentOS/Fedora systems
  ansible.builtin.package:
    name:
      - lttng-ust
      - openssl-libs
      - krb5-libs
      - zlib
      - libicu
    state: present
    update_cache: true
  become: true
  when: (ansible_facts.distribution == "RedHat") or
        (ansible_facts.distribution == "CentOS") or
        (ansible_facts.distribution == "Fedora") or
        (ansible_facts.distribution == "Rocky")
